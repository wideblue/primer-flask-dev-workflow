variables:
  # REGISTRY: docker.io/wideblue/primer-flask-dev
  # REG_USERNAME: wideblue
  # CONFIG_DOCKER: to_be_set
  K8S_CONTEXT: k8s-workflow

stages:
  - build 
  - deploy

build-image:
  stage: build
#  image: docker.io/docker:latest
#  services:
#   - docker.io/docker:dind
  tags:
    - openshift
    #- kubernetes
    #- cluster
  environment:
    name: default
#  before_script:
#    - docker info
#  script:
#    - ps aux
#    - docker build -t ${REGISTRY}:${CI_COMMIT_SHORT_SHA:0:7} .
#    - docker login -u $REG_USERNAME -p $REG_PASSWORD && docker push ${REGISTRY}:${CI_COMMIT_SHORT_SHA:0:7}
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
#    - echo "{\"auths\":{\"https://index.docker.io/v1/\":{\"username\":\"$REG_USERNAME\",\"password\":\"$REG_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR/${K8S_CONTEXT} --dockerfile ${CI_PROJECT_DIR}/${K8S_CONTEXT}/Dockerfile --destination $CI_REGISTRY_IMAGE:${CI_COMMIT_SHORT_SHA:0:7}
#    - /kaniko/executor --context ${CI_PROJECT_DIR}/${K8S_CONTEXT} --dockerfile ${CI_PROJECT_DIR}/${K8S_CONTEXT}/Dockerfile --destination $REGISTRY:${CI_COMMIT_SHORT_SHA:0:7} --snapshotMode=redo
deploy-sever:
  stage: deploy
  image: lachlanevenson/k8s-kubectl:v1.18.0
  tags:
    - openshift
  #  - kubernetes
  #  - cluster
  environment:
    name: default
  script:
    # - kubectl config 
    - cd $K8S_CONTEXT
    # NOTE: I had to shorten CI_COMMIT_SHORT_SHA to 7 characters, because this is how skaffold is set
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_DEPLOY_USER\",\"password\":\"$CI_DEPLOY_PASSWORD\"}}}" > config.json
    # - echo "{\"auths\":{\"https://index.docker.io/v1/\":{\"username\":\"$REG_USERNAME\",\"password\":\"$REG_PASSWORD\"}}}" > config.json
    # NOTE for sed I needed to use colon : as separator because it is not present in base64 ecripted strings, also had problems using base64 encoded strings with sed that is why this I  use this strange code with echo to remove all whitespaces
    - export configvar=$(cat config.json|base64)
    - sed -i "s:base64-encripted-config:$(echo -e $configvar | tr -d '[:space:]'):g" docker-config-secret.yaml
    - sed -i "s|localhost|primer-flask-dev-workflow.apps.msc.arso.sigov.si|g" flask-api-ingress.yaml
    - sed -i "s|simple-flask-api-image|$CI_REGISTRY_IMAGE:${CI_COMMIT_SHORT_SHA:0:7}|g" flask-api-deployment.yaml
    #- sed -i "s|simple-flask-api-image|$REGISTRY:${CI_COMMIT_SHORT_SHA:0:7}|g" flask-api-deployment.yaml
    - sed -i "s| db| database-articles.postgres.svc.cluster.local|g" flask-api-deployment.yaml
    - sed -i "s|example|$DB_PASSWORD|g" flask-api-deployment.yaml
    - kubectl apply -f docker-config-secret.yaml
    - kubectl apply -f flask-api-deployment.yaml
    - kubectl apply -f flask-api-service.yaml
    - kubectl apply -f flask-api-ingress.yaml
   # - sleep 30m
  when: manual 

